(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{343:function(e,n,a){"use strict";a.r(n);var i=a(20),r=Object(i.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"urop-4주차"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#urop-4주차"}},[e._v("#")]),e._v(" UROP 4주차")]),e._v(" "),a("p",[e._v("과제: 간단한 convolution 연산해보기\n연산을 구현하는 것 자체는 그렇게 어렵지 않았다.")]),e._v(" "),a("p",[e._v("Makefile 만들기\n"),a("code",[e._v("USER_SOURCE_FILES += $(patsubst ../src/naive_conv/%, %, $(wildcard ../src/naive_conv/*.c))")]),e._v(" "),a("br"),e._v("\n위와 같은 코드를 이해할 수 있어야 한다.")]),e._v(" "),a("p",[a("strong",[e._v("[linking 단계에서 다음과 같은 문제 발생]")])]),e._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[e._v("Error Messages")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-sbrkr.o): in function `_sbrk_r':\nsbrkr.c:(.text._sbrk_r+0xc): undefined reference to `_sbrk'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-writer.o): in function `_write_r':\nwriter.c:(.text._write_r+0x14): undefined reference to `_write'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-closer.o): in function `_close_r':\ncloser.c:(.text._close_r+0xc): undefined reference to `_close'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-fstatr.o): in function `_fstat_r':\nfstatr.c:(.text._fstat_r+0x12): undefined reference to `_fstat'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-isattyr.o): in function `_isatty_r':\nisattyr.c:(.text._isatty_r+0xc): undefined reference to `_isatty'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-lseekr.o): in function `_lseek_r':\nlseekr.c:(.text._lseek_r+0x14): undefined reference to `_lseek'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-readr.o): in function `_read_r':\nreadr.c:(.text._read_r+0x14): undefined reference to `_read'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-abort.o): in function `abort':\nabort.c:(.text.abort+0xa): undefined reference to `_exit'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-signalr.o): in function `_kill_r':\nsignalr.c:(.text._kill_r+0x12): undefined reference to `_kill'\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libc.a(lib_a-signalr.o): in function `_getpid_r':\nsignalr.c:(.text._getpid_r+0x0): undefined reference to `_getpid'\ncollect2: error: ld returned 1 exit status\nmake: *** [Makefile:202: bin/Naive_Conv.axf] Error 1\n")])])])]),e._v(" "),a("p",[a("em",[e._v("[해결방법]")]),e._v(" "),a("a",{attrs:{href:"https://stackoverflow.com/questions/19419782/exit-c-text0x18-undefined-reference-to-exit-when-using-arm-none-eabi-gcc",target:"_blank",rel:"noopener noreferrer"}},[e._v("여기"),a("OutboundLink")],1),e._v(" 포스트를 참고해서, "),a("br"),e._v("\nMakefile 의 LFLAGS에 --specs=nosys.specs 를 추가")]),e._v(" "),a("blockquote",[a("p",[e._v("이렇게 하면 binary의 크기가 필요이상으로 커진다는 포스트도 보았는데 정말 그런지는 앞으로 확인을 해봐야 할 듯. 해당 포스트에서는 --specs=nano.specs 를 함께 사용해줘야 한다는 말이 있었다. 그런데 그 포스트가 말이 안되는 것 같은게, malloc, free 같은 함수를 사용하는데 있어서 안전장치가 제거된 spec이 nosys.specs 라는데 바이너리의 크기가 더 클 이유가 있나?")])]),e._v(" "),a("p",[a("strong",[e._v("[그럼에도 나타나는 에러]")]),e._v(" \\")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" Linking gcc bin/Naive_Conv.axf\n/home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/bin/ld: /home/jungyoon/gcc_arm/gcc-arm-none-eabi-9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/lib/thumb/v7e-m+fp/hard/libnosys.a(sbrk.o): in function `_sbrk':\nsbrk.c:(.text._sbrk+0x18): undefined reference to `end'\n")])])]),a("p",[e._v("위와 같이 계속해서 파일을 링킹하는데서 문제가 발생,")]),e._v(" "),a("p",[a("em",[e._v("[해결방법]")]),e._v(" "),a("br"),e._v("\n구글링 결과, 일단 linker script를 살짝 바꿔주면 된다고 해서, gcc 폴더 안에 있는 template_link.ld 에 end=.; 한 줄을 추가. 그런데 "),a("code",[e._v("sbrk.o")]),e._v(" 가 heap 메모리와 관련이 있다고(heap 메모리가 stack영역을 침범하지 않도록 하는 기능도 있다는 것 같고) 하는데 이렇게 허술하게 땜질을 해도 되는지 모르겠음. -> "),a("code",[e._v("nosys.specs")]),e._v("를 사용해서 그런가 printf도 작동을 하지 않는다.")]),e._v(" "),a("p",[a("strong",[e._v("[printf를 사용할 수 없는 문제]")]),e._v(" "),a("br"),e._v("\nsparfun sdk에서 제공해주는 library만 사용을 하려고 해서 그랬는지, printf가 작동을 하지 않는다. "),a("br"),e._v("\nprintf 를 사용하고 싶으면 printf 부분을 모두 "),a("code",[e._v("am_util_stdio_printf")]),e._v(" 로 바꿔줘야 한다.")])])}),[],!1,null,null,null);n.default=r.exports}}]);