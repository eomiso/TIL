(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{365:function(a,t,s){"use strict";s.r(t);var n=s(20),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"python-daya-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#python-daya-handling"}},[a._v("#")]),a._v(" Python Daya Handling")]),a._v(" "),s("h2",{attrs:{id:"_1-file-i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-file-i-o"}},[a._v("#")]),a._v(" 1. File I/O")]),a._v(" "),s("h3",{attrs:{id:"reading-line-by-line"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reading-line-by-line"}},[a._v("#")]),a._v(" Reading line by line")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("with")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<file_name>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"r"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    line "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("None")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" line "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# you can see that None and empty string is different in python")]),a._v("\n        line "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("readline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# DO semething with line")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# the readline returns empty string when EOF.")]),a._v("\n")])])]),s("p",[s("code",[a._v("with")]),a._v(" control-flow에 대한 설명"),s("sup",[s("a",{attrs:{href:"#footnote1"}},[a._v("1")])])]),a._v(" "),s("blockquote",[s("p",[a._v("file I/O 에 관한 내용은 다른 파일에서 "),s("sup",[s("a",{attrs:{href:"#footnote2"}},[a._v("2")])])]),a._v(" "),s("ul",[s("li",[a._v("마지막 줄만 읽어오기 : cursur(?) 위치 제어 방법")]),a._v(" "),s("li",[a._v("읽어온 줄 가운데에다가 단어 집어넣기")]),a._v(" "),s("li",[a._v("regex를 이용해서 파일 내용 substitude하기 -> shell로 하는 방법은?")])])]),a._v(" "),s("h3",{attrs:{id:"directory-handling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#directory-handling"}},[a._v("#")]),a._v(" Directory handling")]),a._v(" "),s("p",[s("code",[a._v("os")]),a._v(", "),s("code",[a._v("sys")]),a._v(" 모듈")]),a._v(" "),s("h2",{attrs:{id:"_2-pandas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-pandas"}},[a._v("#")]),a._v(" 2. Pandas")]),a._v(" "),s("h3",{attrs:{id:"pandas-i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pandas-i-o"}},[a._v("#")]),a._v(" Pandas: I/O")]),a._v(" "),s("p",[s("em",[a._v("[Easy ways]")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("pandas.read_csv(filepath or buffer, sep ='\\t')")])]),a._v(" "),s("li",[s("code",[a._v("pandas.read_table(filepath or buffer)")])])]),a._v(" "),s("blockquote",[s("p",[a._v("don't forget about the "),s("code",[a._v("header = None")]),a._v(" if you don't have header")])]),a._v(" "),s("ul",[s("li",[a._v("`pandas.to_csv(filepath, sep='\\t', index = False)")])]),a._v(" "),s("h3",{attrs:{id:"pandas-adding-labels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pandas-adding-labels"}},[a._v("#")]),a._v(" Pandas: adding labels.")]),a._v(" "),s("p",[a._v("Read the lines as buffer.\nadd a column\n<code>")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Series"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\ndf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x\n")])])]),s("blockquote",[s("ul",[s("li",[a._v("끝에 column이 아니라 가운데 넣고 싶으면 어떻게 할래?")])])]),a._v(" "),s("h3",{attrs:{id:"pandas-adding-two-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pandas-adding-two-files"}},[a._v("#")]),a._v(" Pandas: adding two files")]),a._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[a._v("concated "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("df1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" df2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" ignore_index"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# false 해도 됨. 그러면 그냥 각각의 index가 살아 있을 뿐이다.")]),a._v("\n")])])]),s("p",[s("a",{attrs:{name:"footnote1"}},[a._v("1.")]),a._v(" "),s("a",{attrs:{name:"footnote2"}},[a._v("2.")]),a._v(" 항상 이렇게 일종의 과제를 스스로 부여해 놓자. 하나하나 해결하다 보면 실력이 늘겠지")])])}),[],!1,null,null,null);t.default=e.exports}}]);